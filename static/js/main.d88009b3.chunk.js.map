{"version":3,"sources":["images/logo.svg","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","className","Header","props","src","logo","alt","title","showAdd","onAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","style","color","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","length","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88009b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from \"prop-types\";\r\n\r\nexport const Button = ({ text, onClick }) => {\r\n\r\n  return (\r\n    <button onClick={onClick} className=\"btn\">\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}","import logo from \"../images/logo.svg\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button\";\r\n//props: js object which we're passing parent component(in app.js) to child component\r\n//It is an object which stores the value of attributes of a tag and work similar to the HTML attributes.\r\n\r\nexport const Header = (props) => {\r\n  //or instead of (props) -> ({title})\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n        <div>\r\n          <img src={logo} alt=\"logo\" className=\"App-logo\" />{' '}\r\n          <span>{props.title}</span>{/* here -> {title} */}\r\n        </div>\r\n        <Button text={props.showAdd ? 'Close' : 'Add'} onClick={props.onAdd} />\r\n    </header>\r\n  );\r\n};\r\n\r\n//default props\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\", //default value for props argument\r\n};\r\n\r\n//checking the types passed in the props object against a specification we set beforehand and to raise a warning(in browser console) if the types passed don't match the types expected.\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired, //type of title is set string here if we pass number in title then it'll show an error in console\r\n  //.isRequired: if we don't set any value or default value for title it'll show an error in console. i.e it is mandatory to pass value in title\r\n};\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nexport const Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes style={{ color: 'red', cursor: 'pointer' }}\r\n                onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>        \r\n    )\r\n}\r\n","import { Task } from './Task'\r\nexport const Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nexport const AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault()\r\n      if(!text){\r\n          alert(\"Please add task\")\r\n          return\r\n      }\r\n\r\n      onAdd({text, day, reminder})\r\n      //clear form\r\n      setText('')\r\n      setDay('')\r\n      setReminder(false)\r\n  }\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input type=\"text\" placeholder=\"Add task...\" value={text} onChange={(e) => setText(e.target.value)} />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input type=\"text\" placeholder=\"Add Date & Time\" value={day} onChange={(e) => setDay(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n      </div>\r\n\r\n      <input type=\"submit\" className=\"btn2 btn-block\" value=\"Save Task\" />\r\n    </form>\r\n  );\r\n};\r\n","// import React from 'react'\nimport './App.css';\nimport { useState, useEffect } from \"react\";\n\nimport {Header} from './components/Header';\nimport {Tasks} from './components/Tasks';\nimport {AddTask} from './components/AddTask';\nimport { wait } from '@testing-library/react';\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const  getTasks = async () => {\n      const tasksFromServer = await fetchTasks() \n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    // console.log(data)\n    return data\n  }\n\n  //fetch single task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    // console.log(data)\n    return data\n  }\n\n  //Delete a task\n  const deleteTask = async (id) => {\n    // console.log('delete', id)\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    // alert(id);\n    //save task to toggle\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    \n    setTasks(\n      tasks.map((task) => \n      // task.id === id ? {...task, reminder: !task.reminder } : task))\n      task.id === id ? {...task, reminder: data.reminder } : task))\n  }\n\n  //add task\n  const addTask = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // console.log(task)\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"App\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {/* <Header title = \"task manager\"/> */}\n      { showAddTask && <AddTask onAdd={addTask} />}\n      { tasks.length > 0 ?\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : <p style={{ textAlign: 'center', color: 'red'}}>Nothing to show</p>\n      }\n    </div>\n  );\n}\n\n// class method\n// class App extends React.Component{\n//   render() {\n//   return <h1>Hello from class</h1>\n//   }\n// }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}